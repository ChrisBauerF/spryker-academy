define({"0":{i:0.000740972408416428,u:"../what_s_new/whats_new.html",a:"Click   here  for information on how to navigate through the Academy. The following page is a monthly report of what’s new and  changed in the Spryker OS: November 2017 - Release #2 Release Notes - November - 2 2017 Improved: Inspinia Update Improved: Filter Out Certain Orders from Listing in Yves ...",t:"What\u0027s New"},"1":{i:0.000724555563495208,u:"../what_s_new/releases/releases.html",a:"Subscribe to our security updates  here .  To join our release notes mailing list, subscribe  here . This section contains the notes for each release made by Spryker. Make sure you check this section from time-to-time to  stay up to date with the improvements, bug fixes and new features that are ...",t:"Releases"},"2":{i:0.000909218964903246,u:"../what_s_new/releases/release_notes.html",a:"Subscribe to our security updates  here .  To join our release notes mailing list, subscribe  here . On this page you can find the latest release notes and archived content.  Due to the nature of Spryker OS, we have releases nearly every day. Once or twice a month we aggregate this information into ...",t:"Release Notes"},"3":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_november_2_2017.html",a:"This month we released some important security updates. Check them out  here . Improvements Inspinia Update With this update we bring the latest version of Inspinia (2.7.1) into Zed Administrative Interdace. You can now take full advantage Inspinia\u0027s latest feature set and improvements.  In order to ...",t:"Release Notes - November - 2 2017"},"4":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_november_1_2017.html",a:"This month we released some important security updates. Check them out  here . Features Multi-currency for Shipments We are currently working on full enablement of multi-store and multi-currency concepts. In consequent releases we will be step-by-step enabling every relevant functionality with ...",t:"Release Notes - November - 1 2017"},"5":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_october_2_2017.html",a:"Features Multi-currency for Discounts We are currently working on full enablement of multi-store and multi-currency concepts. In consequent releases we will be step-by-step enabling every relevant functionality with multi-store and -currency. This release focuses on enabling multi-currency for ...",t:"Release Notes - October - 2 2017"},"6":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_october_1_2017.html",a:"Features CMS Page Preview Introducing CMS Page Preview, for previewing a working version of your content before publishing it live. This feature gives you the chance to judge the final look of CMS placeholder content as it will appear in the final layout.  The CMS Page Preview has an option to view ...",t:"Release Notes - October - 1 2017"},"7":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_september_2_2017.html",a:"Features Discount Promotion Products For marketing reasons you, the shop owner, might sometimes give away free or discounted products. This can happen depending on the cart content or via a redeemed voucher code. With this release we are introducing discount promotions fully integrated in out ...",t:"Release Notes - September - 2 2017"},"8":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_september_1_2017.html",a:"Features Attribute Management for A High Number of Attributes To  manage a high number of product attributes, we moved them to a separate module supported with a UI.  Now stores with more than 100k of product attributes, have a convenient and easy \"process content management\" interface. Affected ...",t:"Release Notes - September - 1 2017"},"9":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_august_2_2017.html",a:"Features Order Details Improvement We have improved Zed usability for order management. Now in the order view you can have a convenient summary of products from the given order, including images and name of products. Product options related to the given product are visually differentiated making it ...",t:"Release Notes - August - 2 2017"},"10":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_august_1_2017.html",a:"Announcements PHP 7.2 is There Soon / EOL for PHP5.6 With the release of PHP 7.2 we want our Spryker code to stay cutting edge and using the best features available. Soon we want to start leveraging the new typehinting features the language provides and for that we need to stop supporting legacy ...",t:"Release Notes - August - 1 2017"},"11":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_july_2_2017.html",a:"Features Filter by Product Labels We\u0027ve changed product label touch logic in order to be able to export label IDs for products when their label relations change. This will allow you to further search and filter by labels. Affected Modules Documentation For module documentation see:  Product Label ...",t:"Release Notes - July - 2 2017"},"12":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_july_1_2017.html",a:"Features Selecting Product Variant in the Cart With this release we are bringing the variant selection functionality to the cart. Your shop user can now modify the selected variant right in the cart which will then, if available, replace the current item in the cart with the newly selected one (e.g. ...",t:"Release Notes - July - 1 2017"},"13":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_june_2_2017.html",a:"Release Notes - June - 2 2017 See:  Release Notes PDF",t:"Release Notes - June - 2 2017"},"14":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_june_1_2017.html",a:"Improvements Session Service Provider Enhancement Previously the Yves and Zed SessionServiceProvider contained a switch statement to determine which SessionHandler should be used. The switch is a violation of the open-close principle and therefore we refactored the current SessionServiceProvider for ...",t:"Release Notes - June - 1 2017"},"15":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_may_2_2017.html",a:"Release Notes - May - 2 2017 See:  Release Notes",t:"Release Notes - May - 2 2017"},"16":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_may_1_2017.html",a:"See:  Release Notes Documentation Updates Oryx: Oryx is the frontend helper and replacement for Antelope. Read more  here . Product Groups: Product Group feature is for grouping multiple abstract products. Find up-to-date documentation under  here . Zed API (Beta): You can read more about our ...",t:"Release Notes - May - 1 2017"},"17":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_april_2_2017.html",a:"Features Multiple Wishlists This release introduces core functionality to support multiple wishlist handling in Yves. It is now possible to create multiple wishlists in customer account and select which wishlist to add a product to. In the customer account’s wishlist section, users can manage ...",t:"Release Notes - April - 2 2017"},"18":{i:0.000740972408416428,u:"../what_s_new/releases/release_notes_april_1_2017.html",a:"Features Product Relations With this release we introduce product relations feature. This feature can be used in many different ways. Some of the anticipated (and most common for e-commerce shops) use cases are displaying similar products, up-selling of products, etc. The solution comes with a Zed ...",t:"Release Notes - April - 1 2017"},"19":{i:0.000808896684673829,u:"../what_s_new/security_updates.html",a:" November -2 2017 Email Validation in Zed We have identified that Zed is accepting invalidly formatted email strings (for example on customer login) if the HTTP request between Yves and Zed is manipulated on the fly or Yves frontend is manipulated on purpose. As far as we have observed, this does ...",t:"Security Updates "},"20":{i:0.000724555563495208,u:"../understanding_spryker/understanding_spryker.html",a:"Spryker is a Commerce Operating System that provides the end-to-end functionality needed to create a fully-functional commercial online presence for any entity in need of a modular, high-performing and scalable web presence. Spryker OS stands out as an industry leader in Commerce solutions thanks to ...",t:"Understanding Spryker OS"},"21":{i:0.000703922803185119,u:"../understanding_spryker/about_academy.html",a:"Spryker Academy is a central hub for documentation, knowledge and information.  Here you can choose where to go based on your level of knowledge and what you want to do: What\u0027s New, contains information about past and future releases. Understanding Spryker is for people who are thinking about ...",t:"About Spryker Academy"},"22":{i:0.00359751059222941,u:"../understanding_spryker/atomic_releases.html",a:"Spryker OS Release Process Spryker OS comprises more than 100 modules that offer a large collection of functionality.  Our Demoshop is project archetype that demonstrates how the modules are integrated. But what happens if you don’t need all the modules? The problem with many systems is that they ...",t:"Atomic Releases"},"23":{i:0.000703922803185119,u:"../understanding_spryker/code_quality.html",a:"Spryker OS’s code base receives very high scores in terms of quality measures, indicating significantly higher code quality than many other ecommerce solutions.\n \nCode Quality Spryker, PHPmetrics.org score in score points (x out of 100)\n\n The Results\n Maintainability: keeping code \u0026 architecture ...",t:"Code Quality"},"24":{i:0.00223292787477047,u:"../understanding_spryker/definition_api.html",a:"According to  Semantic Versioning  the Spryker OS core team releases a major version “when there are incompatible API changes”. To make a sound decision about the type of the version, we need to define our internal APIs.\n \nIn Spryker OS’s core, all public methods in theses locatable classes are ...",t:"Definition of API"},"25":{i:0.000846075030396599,u:"../understanding_spryker/feature_list.html",a:"The Spryker Commerce OS, provides you with the necessary features to build a solid base for your new web shop.\n\n  Store Administration\n\n Acl, Auth, User, Back-office Application\n The back-office application contains a user interface to create back-office users. Furthermore, the users control module ...",t:"Feature List"},"26":{i:0.000703922803185119,u:"../understanding_spryker/product_management/product_management.html",a:"Product data is central data for shops. It contains characteristics that describe the product as well as characteristics that define their appearance in the shop. For example, the color of a product is an important information that the customer might need, whereas the weight of the product is needed ...",t:"Product Management"},"27":{i:0.00115268533992957,u:"../understanding_spryker/product_management/product_management_attribute.html",a:"Creating and managing product attributes is the first step in enriching your product data. It is an essential part of maintaining and improving the online shop for your customers. Attributes can serve different purposes and are therefore stored in different ways. They may be used not only for ...",t:"Product Attribute Management"},"28":{i:0.000853510315433269,u:"../understanding_spryker/product_management/product_management_hierarchies.html",a:"Abstract and Concrete Products (Variants)\n Spryker OS’s data structure for products allows to design a product hierarchy, which Yves relies on to display products in the correct way. Every product consists of an abstract product and one or more concrete products, also called variants. Your customers ...",t:"Product Hierarchies - Product Management"},"29":{i:0.000853510315433269,u:"../understanding_spryker/product_management/product_management_information.html",a:"Creating a product in Spryker OS In Spryker OS products can be imported or created with the PIM. Creating the product with the PIM starts by defining an abstract product with all its information and then to go on to creating the different variants of this product. This workflow exists because the ...",t:"Product Information Management"},"30":{i:0.000853510315433269,u:"../understanding_spryker/product_management/product_management_options.html",a:"Product options can be used to create product additions that can be sold with the actual product. They don’t have stock, but a SKU that links to a product. They cannot be bought without buying the corresponding product. Examples for product options are insurances or gift wrapping. Both can only ...",t:"Product Options"},"31":{i:0.000703922803185119,u:"../understanding_spryker/twelve_factor_app.html",a:"The Twelve Factor Application is a methodology defined by Heroku co-founder Adam Wiggins, that contains a set of twelve principles for building modern web-based software applications.\n\n We’ll go through the 12 factors to exemplify how a project built using Spryker OS can follow this set of ...",t:"Twelve Factor App"},"32":{i:0.00132290561248781,u:"../understanding_spryker/faq.html",a:"Click on a question or click the expand all button from the top right side of the page. Does Spryker have features? Yes. In the same way that iOS or MacOS do, Spryker as an operating system offers a range of features, called capabilities, which come in modules. These features can be either used ...",t:"FAQ"},"33":{i:0.000703922803185119,u:"../understanding_spryker/getting_support.html",a:"If you need help, you should consult this section.  Here you will find answers to the most frequently asked question.  If you don’t find an answer to your question, please feel free to contact us: we are happy to help you.\n\n Browse section\n Shared Links - List of videos containing technical ...",t:"Getting Support"},"34":{i:0.000703922803185119,u:"../understanding_spryker/feedback.html",a:"Feedback It is time to tell us what you think! Please click  here  to fill out a VERY short survey to help us understand what you need from the Spryker Academy. If that is not enough and you would like to say more, feel free to send en email to  academy@spryker.com .",t:"Feedback"},"35":{i:0.000724555563495208,u:"../getting_started/getting_started.html",a:"If you are visiting this section, you are ready to install and work with Spryker OS.  To begin working with Spryker OS, start with the  Installation Guide . The Installation Guide contains the steps and instructions to follow to completely setup virtual machine containing a demo shop that runs on ...",t:"Getting Started"},"36":{i:0.000703922803185119,u:"../getting_started/concept_overview.html",a:"Spryker is a Commerce Operating System composed of two applications: Yves and Zed.\n\n Yves\tFront-end-presentation layer for customers, based on  Silex .\n Zed\tApplication that contains all business logic and the backend GUI also based on Silex.  The following diagram shows the conceptual parts of the ...",t:"Conceptual Overview"},"37":{i:0.000909218964903246,u:"../getting_started/installation_guide.html",a:"Spryker Commerce OS is delivered as a VM (virtual machine).  All service installations such as database or PHP modules are already included in the VM. To install the Spryker  Commerce OS  for development: 1. Prepare Vagrant To prepare Vagrant, install the following: Git Oracle VirtualBox (Version ...",t:"Installation Guide"},"38":{i:0.000703922803185119,u:"../getting_started/installation_guide_no_vm.html",a:"This guide will help you install Spryker\u0027s Demoshop without using the virtual machine that we offer.\n Minimum requirements:\n\n PHP v7.1.x             apt-get install php7.0-curl php7.0-gd php7.0-gmp php7.0-intl php7.0-mcrypt php7.0-pgsql php-redis php7.0-xml php7.0-mbstring php7.0-bz2 \n               ...",t:"Installation Guide - No VM"},"39":{i:0.000703922803185119,u:"../getting_started/configure_database_server.html",a:"Used to be: http://spryker.github.io/getting-started/installation/database-configuration/ This article describes how you can change your database server.\n\n Spryker offers support for using MySQL or PostgreSQL as database servers. By default, the virtual machine is configured to use the PostgreSQL ...",t:"Configuring the Database Server"},"40":{i:0.00469061924388263,u:"../getting_started/debugging/debugging_setup.html",a:"Used to be: http://spryker.github.io/getting-started/installation/debugging-setup/ This article describes how to setup debugging in your development environment.  To configure debugging for old version of the VM prior 91,  click here . \n\nInstalling the Xdebug module To install Xdebug run: sudo -i ...",t:"Debugging Setup"},"41":{i:0.00469061924388263,u:"../getting_started/debugging/debugging-setup-prior-vm91.html",a:"To configure debugging for the current VM,  click here . This article describes how to setup debugging in your development environment for VM prior verion 91.\n\n Install Xdebug module\n If you don’t have the file /etc/php5/mods-available/xdebug.ini then you might be missing the Xdebug module on the ...",t:"Debugging Setup for VM prior version 91"},"42":{i:0.000703922803185119,u:"../getting_started/security_audit.html",a:"A security audit was performed on our Commerce OS between February 9 and March 30 2016. The audit was conducted by  SektionEins . The evaluation of the Commerce OS was done without having prior knowledge of the source code, in order to protect it from attackers. Where it was the case, the found ...",t:"Security Audit"},"43":{i:0.000703922803185119,u:"../getting_started/system_requirements.html",a:"System Requirements Last review date: Sep. 4, 2017",t:"System Requirements"},"44":{i:0.000703922803185119,u:"../getting_started/performance_guidelines.html",a:"Spryker is a fast application by design. This guidelines explains how to optimize the server-side execution time. Hosting Recommendations CPU: Spryker\u0027s execution time depends on the CPU of the server. In general we can say that more CPU capacity supports faster response times and allows a higher ...",t:"Performance Guidelines"},"45":{i:0.000703922803185119,u:"../getting_started/performing_core_updates.html",a:"Getting updates for your shop system can be quite tricky sometimes. As on one hand, you want your system to have all the newest functionalities and improvements, but on the other hand you might be reluctant of investing additional development effort into the updates. While minor updates are usually ...",t:"Performing Core Updates Smoothly"},"46":{i:0.000703922803185119,u:"../getting_started/technology_stack.html",a:"Spryker is an e-commerce Commerce OS developed in PHP, that promotes SOLID principles and clean code. It’s purpose is to facilitate rapid development in building a customized solution for an e-commerce business.\n\n Technologies used\n Spryker uses a set of well known tools:\n\n Redis Redis is the most ...",t:"Technology Stack"},"47":{i:0.00129564781681685,u:"../getting_started/troubleshooting.html",a:"Click on an issue to see how to troubleshoot. Peer authentication failed for user postgres If you get the error below while running ./setup, on the Setup Zed step: Zed Exception: RuntimeException - psql: FATAL:  Peer authentication failed for user \"postgres\" then open the PostgreSQL configuration ...",t:"Troubleshooting"},"48":{i:0.000703922803185119,u:"../getting_started/vm_cleanup.html",a:"Used to be: http://spryker.github.io/getting-started/installation/virtual-machine-cleanup/ If you need to cleanup the environment set up in the virtual machine, you can either do this by running a script or execute the cleanup steps manually.\n\n VM Cleanup - Automatic To cleanup the VM: Run the setup ...",t:"Virtual Machine Cleanup"},"49":{i:0.00102888897470177,u:"../developing_with_spryker/develping_with_spryker.html",a:"This section contains information and resources for developers working on and implementing their online presence with Spryker OS.  The term \u0027bundle\u0027 has been replaced with the term \u0027module\u0027 to reflect the modular nature of our application.  Academy Navigation To navigate through content, click on an ...",t:"Developing with Spryker OS"},"50":{i:0.000724555563495208,u:"../developing_with_spryker/module_guide/modules.html",a:"A module is a group of files (PHP classes, test classes, configuration files, CSS files, etc) that refer to one concept and it’s written in a way that it makes it usable by other modules. Modules can be logically divided into categories where some are mandatory and necessary for running the OS and ...",t:"Module Guide"},"51":{i:0.000703922803185119,u:"../developing_with_spryker/module_guide/checkout_process/checkout_process.html",a:"The following modules are used to establish cart, checkout and sales functionality. Academy Navigation To navigate through content, click on an option from the right-hand table of contents or use the search (above).  You can also use navigation buttons on the top right corner of page:  Navigate ...",t:"Cart \u0026 Checkout \u0026 Sales"},"52":{i:0.00197219769153758,u:"../developing_with_spryker/module_guide/checkout_process/calculation/calculation.html",a:"Spryker uses the Calculation module to calculate the cart totals that are displayed in the cart/checkout or when the order is placed.\nIts also used to recalculate order totals after refund.\n The calculation module extensively uses plugins to inject calculation algorithms.\n How Calculation Works ...",t:"Calculation"},"53":{i:0.00280937559182667,u:"../developing_with_spryker/module_guide/checkout_process/calculation/calculation_data_structure.html",a:"The following diagram illustrates the Calculation data structure.   Quote Transfer\n QuoteTransfer is the main data transfer object used in Cart, Calculation, Checkout and when order is placed. This object is created when first item is added to the cart.  The entire data object is stored into the ...",t:"Calculation Data Structure"},"54":{i:0.000848104593337124,u:"../developing_with_spryker/module_guide/checkout_process/calculation/calculation_plugins.html",a:"\nCalculator plugins are registered in the CalculationDependencyProvider::getCalculatorStack() for QuoteTransfer and CalculationDependencyProvider::getOrderCalculatorPluginStack() for OrderTransfer.  This method can be extended on the project level and the plugin stack can be updated with your own ...",t:"Calculator Plugins"},"55":{i:0.00147115322223303,u:"../developing_with_spryker/module_guide/checkout_process/calculation/calculation_3_0.html",a:"The latest version of this module can be found here  Calculation Spryker uses the Calculation module to calculate the cart totals that are displayed in the cart/checkout or when the order is placed.\n\n The calculation module extensively uses plugins to inject calculation algorithms.\n How Calculation ...",t:"Calculation 3.0"},"56":{i:0.00113265687435615,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout.html",a:"Yves Step Processing Checkout in Spryker demoshop uses a StepEngine step process to navigate customer step by step through checkout. The checkout process creates a generic approach for step processing; each step knows how to handle the form data, where it has to store data and which conditions are ...",t:"Checkout"},"57":{i:0.000810899103003027,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_quote_trans_lifetime.html",a:"When a process is being called on StepProcess, it will try to get the current valid step by walking through the step stack and calling the postCondition() for each, starting from the first in the stack. If postCondition() is being called on StepProcess, it will try to get the current valid step by ...",t:"Checkout Quote Transfer Lifetime"},"58":{i:0.000810899103003027,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_form_submission.html",a:"On form submission, the same processing starts with the difference that if form submit is detected then the validation is called: if the form is invalid then view will be rendered with validation errors if form data is valid, then execute() is called on step that executes the step related logic. ...",t:"Checkout Form Submission"},"59":{i:0.000810899103003027,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_how_wired.html",a:"In order to use checkout in Yves it should be correctly configured and dependencies should be provided. Each step can have a form, a controller action, the implementation of the step logic and Twig template to render the HTML. Forms - current step form collection. Controller action - the action that ...",t:"How Things are Wired Together - Checkout"},"60":{i:0.000810899103003027,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_how_quote_trans_mapped.html",a:"Symfony forms provide a mechanism to store data into objects without having the need of a manual mapping. It’s called  Data transformers . There are a few important things to make this work. Because we are passing the entire QuoteTransfer, the form handler does not know which fields are you trying ...",t:"How the Quote Transfer is Mapped Inside Forms - Checkout"},"61":{i:0.00540334051452255,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_steps.html",a:"Entry Step Redirect customer to correct step based on QuoteTransfer state. This step requires input = false so it won’t be rendered. Customer Step The customer step provides three forms (login, register and register as a guest). This step is responsible for filling CustomerTransfer with ...",t:"Checkout Steps"},"62":{i:0.000810899103003027,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_step_interface.html",a:" #\n  \u003c?php\n  interface StepInterface\n  {\n\t/**\n\t * Requirements for this step, return true when satisfied.\n\t *\n\t * @param QuoteTransfer $quoteTransfer\n\t *\n\t * @return bool\n\t */\n\tpublic function preCondition(QuoteTransfer $quoteTransfer);\n\t/**\n\t * Require input, should we render view with form or just ...",t:"Checkout Step Interface"},"63":{i:0.000810899103003027,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_step_ext_red_interface.html",a:" #\n  \u003c?php\n  interface StepWithExternalRedirectInterface extends StepInterface\n  {\n\t/**\n\t * Return external redirect url, when redirect occurs not within same application. Used after execute.\n\t *\n\t * @return string\n\t */\n\tpublic function getExternalRedirectUrl();\n  }",t:"Step with External Redirect Interface - Checkout"},"64":{i:0.0128360612176806,u:"../developing_with_spryker/module_guide/checkout_process/checkout/checkout_placing_the_order.html",a:"After the customer clicks the submit button during the SummaryStep, the PlaceOrderStep is started. This step takes the QuoteTransfer` and starts the checkout workflow to store the order into the system. Zed Checkout modulecontains a number of plugins where you can add additional behavior, check ...",t:"Placing the Order — Checkout"},"65":{i:0.00201981210845767,u:"../developing_with_spryker/module_guide/checkout_process/oms/oms.html",a:"Many start ups in the eCommerce world have gone through an automation approach of their order processing as described by Fabian Wesner in his blog post ( Introduction to Automated Order Management for E-commerce Startups ). They have started highly manually: every step from order to fulfillment was ...",t:"OMS"},"66":{i:0.00242087259401843,u:"../developing_with_spryker/module_guide/checkout_process/oms/patterns.html",a:"Process Patterns The  State Machine Cook Book  describes how to build a state machine with the elements state, transition and event. However there are some recurring design problems that are needed in many processes. In this article common problems and their solution with state machine snippets are ...",t:"State Machine Patterns"},"67":{i:0.0052066490281243,u:"../developing_with_spryker/module_guide/checkout_process/refund/refund.html",a:"Refund Refund manages the retour refund process. Overview RefundFacade contains the following methods: calculateRefund(array $salesOrderItems, SpySalesOrder $salesOrderEntity) calculates refundable amount for the sales order saveRefund(RefundTransfer $refundTransfer) persists the calculated refund ...",t:"Refund"},"68":{i:0.00379057568549497,u:"../developing_with_spryker/module_guide/checkout_process/refund/refund_2_0.html",a:"The latest version of this module can be found here  Refund The Refund module manages the retours refund process. Overview Using  Refund  Extending  Refund  Overview RefundFacade contains the following methods: calculateRefund(array $salesOrderItems, SpySalesOrder $salesOrderEntity) calculates ...",t:"Refund 2.0"},"69":{i:0.0118962422633018,u:"../developing_with_spryker/module_guide/checkout_process/sales/sales.html",a:"The Sales module provides the order management functionality. The functionality is obtained through the ZED UI that renders orders with orders details and the Client API to get customer orders. Getting totals for order To get the Order with totals, the facade method ...",t:"Sales"},"70":{i:0.0108067854203049,u:"../developing_with_spryker/module_guide/checkout_process/sales/sales_5_0.html",a:"The latest version of this module can be found here  Sales Getting totals for order Spryker does not store order grand total or subtotal amounts; all amounts are stored before calculation, order items store single item gross amounts, discounts store single item discount amount. To get the discount ...",t:"Sales 5.0"},});