define({"411":{i:0.00345244883258243,u:"../enablement/tutorials/onboarding/t_stores.html",a:"Challenge Description Override a Zed core module on project level, and then override it on store level. You can also repeat the same challenge for a Yves module. Challenge Solving Highlights Project Level Let’s first override on the project level. Add an IndexController::indexAction() to ...",t:"Tutorial: Stores"},"412":{i:0.0014102315425559,u:"../enablement/videos___webinars/videos.html",a:"Videos Project Structure   Extending Spryker  Main Classes - 1   Introduction to Antelope Main Classes - 2   Spryker Release Process",t:"Videos"},"413":{i:0.0015090636516625,u:"../developing_with_spryker/store_administration_guide/shipment/bg_shipment_creating_carrier.html",a:"Creating a Carrier Company - Shipment",t:"Creating a Carrier Company - Shipment"},"414":{i:0.00105898985703921,u:"../enablement/migration_guides/mg_sales_aggregator_migration_console.html",a:"\u003c?php\n/**\n * Copyright © 2017-present Spryker Systems GmbH. All rights reserved.\n * Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.\n */\n\nnamespace Pyz\\Zed\\SalesAggregator\\Communication\\Console;\n\nuse Exception;\nuse ...",t:"Migration Guide - SalesAggregator Migration Console Command"},"415":{i:0.00105898985703921,u:"../disclaimer.html",a:"Urheber \u0026 Haftungsausschluss für Publikationen Veröffentlicht in Berlin von der: Spryker Systems GmbH Julie-Wolfthorn-Strasse 1 10115 Berlin – DEUTSCHLAND eMail:  info@spryker.com Telefon: +49 (0) 30 208498351 Der Inhalt dieser Publikation ist unverbindlich und dient ausschließlich ...",t:"Disclaimer"},"416":{i:0.00105898985703921,u:"../enablement/howtos/ht_extend_inuse_core.html",a:"This topic describes how to extend a core module that is used by another core module.\n\n Extra consideration must be taken when extending core modules that are already in use by another module. In the following example we will extend the Cart  -\u003e Calculation modules.\n\n Step 1: Modify the Interface ...",t:"HowTo - Extend a Core Module that is Used by Another"},"417":{i:0.00238725320092576,u:"../developing_with_spryker/3rd-party_integration/payolution/integration_payment_payolution_requests.html",a:"In order to perform the needed requests, you can easily use the implemented state machine commands and conditions. The next section gives a summary of them. You can also use the facade methods directly which, however, are invoked by the state machine.\n\n Payolution State Machine Commands and ...",t:"Perform Requests - Payolution"},"418":{i:0.0015090636516625,u:"../developing_with_spryker/store_administration_guide/shipment/bg_shipment_creating_method.html",a:"A shipment method is described by : delivery price (how is the price for a delivery calculated?) delivery time (what’s the estimated time for the delivery?) availability (when is the shipment method available?) Each shipment method has its own specificity, so these 3 aspects must be configured(this ...",t:"Creating a Shipment Method"},"419":{i:0.00108899477668076,u:"../developing_with_spryker/3rd-party_integration/payolution/integration_payment_payolution.html",a:"Payolution provides two methods of payment:\n\n Invoice \nInstallment\n In order to integrate Payolution payments, a Payolution merchant account should be created and configuration data then could be obtained from Payolution. There are two types of accounts for the integration: test and live accounts. ...",t:"Payment Integration - Payolution"},"420":{i:0.00105898985703921,u:"../developing_with_spryker/module_guide/content_management/cms_block/cms_block_product_connector.html",a:"CMS Block Product Connector Delete this text and replace it with your own content.",t:"CMS Block Product Connector"},"421":{i:0.00105898985703921,u:"../index.html",a:"Spryker Knowledge Planning to use Spryker? All you need to know about using and setting up the Spryker Commerce Operating System. Understanding Spryker Get to know what Spryker is and how you can easily adopt the Commerce OS Framework for building your\n                                    e-commerce ...",t:"Spryker Academy"},"422":{i:0.00105898985703921,u:"../developing_with_spryker/module_guide/content_management/cms_block/cms_block_category_connector.html",a:"CMS Block Category Connector Delete this text and replace it with your own content.",t:"CMS Block Category Connector"},"423":{i:0.00105898985703921,u:"../developing_with_spryker/3rd-party_integration/ratepay/payment_integration_ratepay.html",a:"BETA version\n This module is still in development. RatePAY is an online service provider that allows merchants to provide their customers secure, customized payment methods. RatePAY bears the full risk and takes over the complete processing.\n\n RatePAY provides four methods of payment:\n\n Invoice - ...",t:"Payment Integration - RatePAY"},"424":{i:0.00105898985703921,u:"../developing_with_spryker/module_guide/inventory/about_inventory.html",a:"The following modules are used to establish inventory functionality. To navigate through content, click on an option from the right-hand table of contents or use the search (above).  You can also use the back/next buttons to move between items under the same category.  To improve readability, all ...",t:"About Inventory"},"425":{i:0.0015090636516625,u:"../understanding_spryker/product_management.html",a:"Product data is central data for shops. It contains characteristics that describe the product as well as characteristics that define their appearance in the shop. For example, the color of a product is an important information that the customer might need, whereas the weight of the product is needed ...",t:"Product Management"},"426":{i:0.00105898985703921,u:"../enablement/migration_guides/mg_cms_to_cms_block_console.html",a:"Migration Guide - CMS Block Migration Console Delete this text and replace it with your own content.",t:"Migration Guide - CMS Block Migration Console"},"427":{i:0.00129040285478551,u:"../developing_with_spryker/3rd-party_integration/payolution/integration_payment_payolution_integrating.html",a:"To add Payolution as payment provider to your project you need to follow these steps:\n\n Add spryker/payolution to your project by running composer require spryker/payolution Copy over configs to your config using the provided config.dist.php file from the Payolution module.\n With the provided ...",t:"Integrating Payolution into your Project"},"428":{i:0.00105898985703921,u:"../release_notes_month_rel_2017.html",a:"Features Feature Name Description Affected modules Documentation For module documentation see:  Link name . Improvements Improvement Name Description Affected modules Documentation For module documentation see:  Link name . Bug Fixes Bug Name Description Affected modules Documentation For module ...",t:"Release Notes Template - Month - # 2017"},"429":{i:0.00129040285478551,u:"../developing_with_spryker/3rd-party_integration/payolution/integration_payment_payolution_installment.html",a:"Installment Scenarios\n Standard Case\n Full Refund\n  \n\nPartial Refund\n Integrating Payolution Installment Payment\n The In order to integrate installment payment, two simple steps are needed: set Payolution installment payment configuration and call the facade functions.\n\n Set Payolution Installment ...",t:"Installment Payment - Payolution"},"430":{i:0.00105898985703921,u:"../developing_with_spryker/store_administration_guide/shipment/bg_shipment.html",a:"The carrier companies that you want to have integrated in the shop can be configured from the back-office UI. For each carrier company you can add one or more shipment methods that you want to enable in the shop. A carrier company refers to a company that provides shipment services (e.g.: DHL, UPS, ...",t:"Shipment"},"431":{i:0.00105898985703921,u:"../testpage.html",a:"Back-office user and role management Version: 3.0.0\n\t\t https://github.com/spryker/Acl Description Features Add, view, define, search and remove rules and roles per store in UI\n\t\t\t\t Apply rules to modules (e.g. sales), controllers (e.g. orders) and actions (e.g. edit). Configure permission (allow or ...",t:"Acl"},"432":{i:0.00105898985703921,u:"../developing_with_spryker/module_guide/content_management/cms_block/cms_block.html",a:"CMS Block Delete this text and replace it with your own content.",t:"CMS Block"},"433":{i:0.00129040285478551,u:"../developing_with_spryker/3rd-party_integration/payolution/integration_payment_payolution_invoice.html",a:"Workflow Scenarios\n Payments from Payolution to Merchant are not included in the sequence diagrams since they occur on a regular basis (e.g. every week).\n\n Standard Case\n Full Refund Before Payment Partial Refund Before Payment\n Full Refund After Payment\n Partial Refund After Payment\n Integrating ...",t:"Invoice Payment - Payolution"},});